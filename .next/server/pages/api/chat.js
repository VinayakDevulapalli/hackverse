"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat";
exports.ids = ["pages/api/chat"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/chat.js */ \"(api)/./pages/api/chat.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/chat\",\n        pathname: \"/api/chat\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmNoYXQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmNoYXQuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDZ0Q7QUFDaEQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLCtDQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQywrQ0FBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW5rLXN0YXRlbWVudC1yZWFkZXIvP2Y0MWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9jaGF0LmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY2hhdFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NoYXRcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/chat.js":
/*!***************************!*\
  !*** ./pages/api/chat.js ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_0__]);\nopenai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// pages/api/chat.js - Simplified to use direct Supabase queries\n\n\nconst client = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconsole.log(\"Environment check:\", {\n    hasSupabaseUrl: !!\"https://apftqchtwcwrnkmjzhcr.supabase.co\",\n    hasServiceKey: !!process.env.SUPABASE_SERVICE_ROLE_KEY,\n    hasOpenAI: !!process.env.OPENAI_API_KEY,\n    supabaseUrlPreview: \"https://apftqchtwcwrnkmjzhcr.supabase.co\"?.substring(0, 30) + \"...\"\n});\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        console.log(\"=== CHAT API DEBUG START ===\");\n        const { message } = req.body;\n        console.log(\"Received message:\", message);\n        if (!message) {\n            return res.status(400).json({\n                error: \"Message is required\"\n            });\n        }\n        if (!process.env.OPENAI_API_KEY) {\n            console.log(\"OpenAI API key missing\");\n            return res.status(500).json({\n                error: \"OpenAI API key not configured\"\n            });\n        }\n        // Direct Supabase query - bypass the dataStore entirely\n        console.log(\"Querying Supabase directly...\");\n        let bankData = null;\n        let gstData = null;\n        let pnlData = null;\n        try {\n            const supabaseUrl = \"https://apftqchtwcwrnkmjzhcr.supabase.co\";\n            const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n            if (!supabaseUrl || !supabaseServiceKey) {\n                console.error(\"Missing Supabase environment variables\");\n                return res.status(500).json({\n                    error: \"Supabase not configured\"\n                });\n            }\n            const supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseServiceKey, {\n                auth: {\n                    autoRefreshToken: false,\n                    persistSession: false\n                }\n            });\n            // Query bank data\n            const { data: bankResults, error: bankError } = await supabase.from(\"transactions\").select(\"*\").order(\"created_at\", {\n                ascending: false\n            }).limit(1);\n            console.log(\"Bank query results:\", {\n                error: bankError?.message,\n                hasResults: !!bankResults,\n                resultsLength: bankResults?.length\n            });\n            if (bankResults && bankResults.length > 0) {\n                const rawBankData = bankResults[0];\n                console.log(\"Raw bank data columns:\", Object.keys(rawBankData));\n                // Extract the actual transaction data\n                bankData = rawBankData.categorized_output || rawBankData.data || rawBankData.processed_data || rawBankData.transactions || rawBankData.transaction_data || rawBankData;\n                console.log(\"Extracted bank data:\", {\n                    type: typeof bankData,\n                    hasData: !!bankData,\n                    isObject: typeof bankData === \"object\",\n                    keys: bankData && typeof bankData === \"object\" ? Object.keys(bankData).slice(0, 10) : null,\n                    preview: typeof bankData === \"string\" ? bankData.substring(0, 200) : JSON.stringify(bankData).substring(0, 200)\n                });\n            }\n            // Query GST data (optional - won't fail if table doesn't exist)\n            try {\n                const { data: gstResults } = await supabase.from(\"gst3b\").select(\"*\").order(\"created_at\", {\n                    ascending: false\n                }).limit(1);\n                if (gstResults && gstResults.length > 0) {\n                    gstData = gstResults[0].data || gstResults[0].gst_ocr_output || gstResults[0];\n                }\n            } catch (gstError) {\n                console.log(\"GST table query failed (might not exist):\", gstError.message);\n            }\n            // Query P&L data (optional)\n            try {\n                const { data: pnlResults } = await supabase.from(\"pnl\").select(\"*\").order(\"created_at\", {\n                    ascending: false\n                }).limit(1);\n                if (pnlResults && pnlResults.length > 0) {\n                    pnlData = pnlResults[0].data || pnlResults[0].pnl_ocr_output || pnlResults[0];\n                }\n            } catch (pnlError) {\n                console.log(\"P&L table query failed (might not exist):\", pnlError.message);\n            }\n        } catch (supabaseError) {\n            console.error(\"Supabase query error:\", supabaseError);\n            return res.status(500).json({\n                error: \"Failed to fetch data from database\",\n                details:  true ? supabaseError.message : 0\n            });\n        }\n        console.log(\"Final data status:\", {\n            hasBank: !!bankData,\n            hasGST: !!gstData,\n            hasPNL: !!pnlData,\n            bankDataType: typeof bankData\n        });\n        // Helper function to format data for the prompt\n        const formatDataForPrompt = (data, dataType)=>{\n            if (!data) {\n                return `Not provided - Please upload ${dataType}`;\n            }\n            try {\n                if (typeof data === \"string\") {\n                    return data.length > 4000 ? data.substring(0, 4000) + \"...[truncated]\" : data;\n                }\n                const jsonString = JSON.stringify(data, null, 2);\n                return jsonString.length > 4000 ? jsonString.substring(0, 4000) + \"...[truncated]\" : jsonString;\n            } catch (error) {\n                console.error(`Error formatting ${dataType}:`, error);\n                return `Data available but formatting error: ${error.message}`;\n            }\n        };\n        const systemPrompt = `You are a financial assistant chatbot specialized in analyzing financial documents.\n\nAvailable Data:\n==============\n\nBank Statement Data:\n${formatDataForPrompt(bankData, \"bank statement\")}\n\nGST Data:\n${formatDataForPrompt(gstData, \"GST return\")}\n\nP&L Data:\n${formatDataForPrompt(pnlData, \"P&L statement\")}\n\nInstructions:\n============\n- Analyze the actual financial data provided above to answer questions\n- For bank statements: Look for transactions, balances, income, expenses, cash flow patterns\n- For GST data: Analyze tax liability, input/output tax, compliance status  \n- For P&L data: Review revenue, expenses, profit margins, financial performance\n- If data shows \"Not provided\", inform the user to upload that document type\n- Provide specific insights with numbers, totals, and trends from the actual data\n- Calculate summaries, averages, and financial ratios when possible\n- Be detailed and helpful in your financial analysis`;\n        console.log(\"System prompt created, length:\", systemPrompt.length);\n        console.log(\"Calling OpenAI...\");\n        const completion = await client.chat.completions.create({\n            model: \"gpt-4o-mini\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: systemPrompt\n                },\n                {\n                    role: \"user\",\n                    content: message\n                }\n            ],\n            temperature: 0.7,\n            max_tokens: 1500\n        });\n        const reply = completion.choices[0].message.content;\n        console.log(\"OpenAI response received successfully, length:\", reply.length);\n        res.status(200).json({\n            reply\n        });\n    } catch (error) {\n        console.error(\"=== CHAT API ERROR ===\");\n        console.error(\"Error details:\", {\n            name: error.name,\n            message: error.message,\n            stack: error.stack\n        });\n        // More specific error handling\n        if (error.code === \"insufficient_quota\") {\n            return res.status(500).json({\n                error: \"OpenAI API quota exceeded. Please check your billing.\"\n            });\n        } else if (error.code === \"invalid_api_key\") {\n            return res.status(500).json({\n                error: \"Invalid OpenAI API key\"\n            });\n        } else if (error.name === \"TypeError\" && error.message.includes(\"fetch\")) {\n            return res.status(500).json({\n                error: \"Network error connecting to OpenAI\"\n            });\n        }\n        res.status(200).json({\n            reply: \"I'm having trouble accessing your financial data right now. Please make sure your bank statement is properly uploaded and try again.\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/chat.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();